// Mocks generated by Mockito 5.4.6 from annotations
// in bluepills/test/settings_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:bluepills/models/app_config.dart' as _i2;
import 'package:bluepills/services/config_service.dart' as _i3;
import 'package:bluepills/services/export_service.dart' as _i5;
import 'package:bluepills/services/import_service.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeAppConfig_0 extends _i1.SmartFake implements _i2.AppConfig {
  _FakeAppConfig_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i3.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AppConfig get config =>
      (super.noSuchMethod(
            Invocation.getter(#config),
            returnValue: _FakeAppConfig_0(this, Invocation.getter(#config)),
          )
          as _i2.AppConfig);

  @override
  bool get isSyncEnabled =>
      (super.noSuchMethod(Invocation.getter(#isSyncEnabled), returnValue: false)
          as bool);

  @override
  bool get hasValidSyncConfig =>
      (super.noSuchMethod(
            Invocation.getter(#hasValidSyncConfig),
            returnValue: false,
          )
          as bool);

  @override
  _i4.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateConfig(_i2.AppConfig? newConfig) =>
      (super.noSuchMethod(
            Invocation.method(#updateConfig, [newConfig]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> enableSync({
    required String? blueskyHandle,
    required String? pdsUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#enableSync, [], {
              #blueskyHandle: blueskyHandle,
              #pdsUrl: pdsUrl,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> disableSync() =>
      (super.noSuchMethod(
            Invocation.method(#disableSync, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateLastSyncTime([DateTime? time]) =>
      (super.noSuchMethod(
            Invocation.method(#updateLastSyncTime, [time]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [ExportService].
///
/// See the documentation for Mockito's code generation for more information.
class MockExportService extends _i1.Mock implements _i5.ExportService {
  MockExportService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> exportMedications() =>
      (super.noSuchMethod(
            Invocation.method(#exportMedications, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [ImportService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImportService extends _i1.Mock implements _i6.ImportService {
  MockImportService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> importMedications() =>
      (super.noSuchMethod(
            Invocation.method(#importMedications, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
