// Mocks generated by Mockito 5.4.6 from annotations
// in bluepills/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:bluepills/database/database_adapter.dart' as _i2;
import 'package:bluepills/models/medication.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [DatabaseAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseAdapter extends _i1.Mock implements _i2.DatabaseAdapter {
  MockDatabaseAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<int> insertMedication(_i4.Medication? medication) =>
      (super.noSuchMethod(
            Invocation.method(#insertMedication, [medication]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.Medication>> getMedications() =>
      (super.noSuchMethod(
            Invocation.method(#getMedications, []),
            returnValue: _i3.Future<List<_i4.Medication>>.value(
              <_i4.Medication>[],
            ),
          )
          as _i3.Future<List<_i4.Medication>>);

  @override
  _i3.Future<int> updateMedication(_i4.Medication? medication) =>
      (super.noSuchMethod(
            Invocation.method(#updateMedication, [medication]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> deleteMedication(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMedication, [id]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);
}
