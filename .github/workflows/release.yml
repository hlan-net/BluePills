name: Release Build & Deploy

# Triggered on version tags or manual workflow dispatch
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.1)'
        required: true
        type: string

env:
  FLUTTER_VERSION: '3.32.7'

jobs:
  # Create GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      release-id: ${{ steps.create-release.outputs.id }}
      upload-url: ${{ steps.create-release.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Generate changelog
      id: changelog
      run: |
        echo "## Changes" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md

    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: BluePills ${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

  # Build Android Release
  build-android:
    name: Build Android Release
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Setup Java
      uses: actions/setup-java@v5
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Setup Android signing (if keystore available)
      if: secrets.ANDROID_KEYSTORE_BASE64 != ''
      env:
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/keystore.jks
        echo "storePassword=$ANDROID_KEYSTORE_PASSWORD" > android/key.properties
        echo "keyPassword=$ANDROID_KEY_PASSWORD" >> android/key.properties
        echo "keyAlias=$ANDROID_KEY_ALIAS" >> android/key.properties
        echo "storeFile=keystore.jks" >> android/key.properties

    - name: Build Android APK
      run: flutter build apk --release --split-per-abi

    - name: Build Android App Bundle
      run: flutter build appbundle --release

    - name: Upload APK to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        asset_name: BluePills-android-arm64.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload App Bundle to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: build/app/outputs/bundle/release/app-release.aab
        asset_name: BluePills-android.aab
        asset_content_type: application/octet-stream

    - name: Upload to Google Play (Internal Testing)
      if: env.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON != ''
      env:
        GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ env.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.slorba.bluepills
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: internal
        status: completed

  # Build Web Release
  build-web:
    name: Build Web Release
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Build Web
      run: flutter build web --release --dart-define=FLUTTER_WEB_USE_SKIA=true

    - name: Create web archive
      run: |
        cd build/web
        tar -czf ../../BluePills-web.tar.gz .

    - name: Upload Web build to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: BluePills-web.tar.gz
        asset_name: BluePills-web.tar.gz
        asset_content_type: application/gzip

    - name: Deploy to GitHub Pages
      if: github.repository_owner == github.actor
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/web
        cname: bluepills.yourdomain.com  # Replace with your domain

  # Build Linux Release
  build-linux:
    name: Build Linux Release
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Setup Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Build Linux
      run: flutter build linux --release

    - name: Create Linux archive
      run: |
        cd build/linux/x64/release/bundle
        tar -czf ../../../../../BluePills-linux.tar.gz .

    - name: Upload Linux build to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: BluePills-linux.tar.gz
        asset_name: BluePills-linux.tar.gz
        asset_content_type: application/gzip

  # Build Windows Release
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    needs: create-release
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Build Windows
      run: flutter build windows --release

    - name: Create Windows archive
      run: |
        cd build/windows/x64/runner/Release
        Compress-Archive -Path * -DestinationPath ../../../../../BluePills-windows.zip

    - name: Upload Windows build to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: BluePills-windows.zip
        asset_name: BluePills-windows.zip
        asset_content_type: application/zip

  # Build macOS Release
  build-macos:
    name: Build macOS Release
    runs-on: macos-latest
    needs: create-release
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Build macOS
      run: flutter build macos --release

    - name: Create macOS archive
      run: |
        cd build/macos/Build/Products/Release
        tar -czf ../../../../../BluePills-macos.tar.gz BluePills.app

    - name: Upload macOS build to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: BluePills-macos.tar.gz
        asset_name: BluePills-macos.tar.gz
        asset_content_type: application/gzip