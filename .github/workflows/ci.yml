name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.32.7'

jobs:
  # Code Quality Checks
  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .

    - name: Run security check
      run: ./scripts/security-check.sh

    - name: Analyze project source
      run: flutter analyze --fatal-infos

    - name: Run tests
      run: flutter test --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: coverage/lcov.info
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  # Security Scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v4
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Build Tests for Multiple Platforms
  build-test:
    name: Build Test (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    needs: analyze
    strategy:
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
          - platform: web
            os: ubuntu-latest
          - platform: linux
            os: ubuntu-latest
          - platform: windows
            os: windows-latest
          - platform: macos
            os: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Setup Linux dependencies
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Build for Android
      if: matrix.platform == 'android'
      run: flutter build apk --debug --target-platform android-arm64

    - name: Build for Web
      if: matrix.platform == 'web'
      run: flutter build web --dart-define=FLUTTER_WEB_USE_SKIA=true

    - name: Build for Linux
      if: matrix.platform == 'linux'
      run: flutter build linux --debug

    - name: Build for Windows
      if: matrix.platform == 'windows'
      run: flutter build windows --debug

    - name: Build for macOS
      if: matrix.platform == 'macos'
      run: flutter build macos --debug

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.platform }}
        path: |
          build/app/outputs/flutter-apk/*.apk
          build/web/
          build/linux/
          build/windows/
          build/macos/
        retention-days: 7

  # Dependency Updates
  dependency-update:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Update dependencies
      run: |
        flutter pub upgrade --major-versions
        dart run build_runner build --delete-conflicting-outputs

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      if: steps.changes.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'Automated Dependency Update'
        body: |
          This is an automated pull request to update project dependencies.
          
          Please review the changes and ensure all tests pass before merging.
        branch: dependency-updates
        delete-branch: true